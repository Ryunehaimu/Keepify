"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/new-item/page",{

/***/ "(app-pages-browser)/./src/lib/api.ts":
/*!************************!*\
  !*** ./src/lib/api.ts ***!
  \************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiClient: () => (/* binding */ apiClient)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\nclass ApiClient {\n    setupInterceptors() {\n        // Request interceptor\n        this.api.interceptors.request.use((config)=>{\n            const token = localStorage.getItem('keepify_token');\n            if (token) {\n                config.headers.Authorization = \"Bearer \".concat(token);\n            }\n            return config;\n        }, (error)=>{\n            return Promise.reject(error);\n        });\n        // Response interceptor\n        this.api.interceptors.response.use((response)=>response, (error)=>{\n            var _error_response;\n            if (((_error_response = error.response) === null || _error_response === void 0 ? void 0 : _error_response.status) === 401) {\n                localStorage.removeItem('keepify_token');\n                window.location.href = '/login';\n            }\n            return Promise.reject(error);\n        });\n    }\n    // Auth methods\n    async login(email, password) {\n        const response = await this.api.post('/auth/login', {\n            email,\n            password\n        });\n        return response.data;\n    }\n    async register(userData) {\n        const response = await this.api.post('/auth/register', userData);\n        return response.data;\n    }\n    async getProfile() {\n        const response = await this.api.get('/auth/profile');\n        return response.data;\n    }\n    async getMyDashboardSummary() {\n        const response = await this.api.get('/items/summary/my-summary');\n        return response.data;\n    }\n    // Storage items methods\n    async getMyItems() {\n        const response = await this.api.get('/items/my-items');\n        return response.data;\n    }\n    async createStorageItem(data) {\n        const response = await this.api.post('/items', data, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        });\n        return response.data;\n    }\n    // NEW: Create entrustment order method\n    async createEntrustmentOrder(formData) {\n        try {\n            console.log('Creating entrustment order...');\n            console.log('Backend URL:', this.api.defaults.baseURL); // Debug: show which URL we're hitting\n            // Log FormData contents for debugging\n            for (let [key, value] of formData.entries()){\n                console.log(\"FormData \".concat(key, \":\"), value);\n            }\n            const response = await this.api.post('/items', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            });\n            console.log('Entrustment order created successfully:', response.data);\n            return response.data;\n        } catch (error) {\n            console.error('Create entrustment order error:', error);\n            // Enhanced error handling\n            if (error.response) {\n                var _error_response_data, _error_response_data1;\n                // Server responded with error status\n                const status = error.response.status;\n                const message = ((_error_response_data = error.response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || 'Failed to create entrustment order';\n                const details = ((_error_response_data1 = error.response.data) === null || _error_response_data1 === void 0 ? void 0 : _error_response_data1.details) || '';\n                console.error('Server error response:', {\n                    status,\n                    message,\n                    details,\n                    data: error.response.data\n                });\n                throw new Error(\"Error \".concat(status, \": \").concat(message).concat(details ? ' - ' + details : ''));\n            } else if (error.request) {\n                // Request was made but no response received\n                console.error('No response received:', error.request);\n                throw new Error('Server tidak merespons. Periksa koneksi network dan pastikan backend server berjalan di http://localhost:3000');\n            } else {\n                // Something else happened\n                console.error('Request setup error:', error.message);\n                throw new Error('Terjadi kesalahan saat membuat request: ' + error.message);\n            }\n        }\n    }\n    async getStorageItem(id) {\n        const response = await this.api.get(\"/items/\".concat(id));\n        return response.data;\n    }\n    async post(url, data, config) {\n        const response = await this.api.post(url, data, config);\n        return response.data;\n    }\n    async get(url, config) {\n        const response = await this.api.get(url, config);\n        return response.data;\n    }\n    // Admin methods\n    async getPendingPickups() {\n        const response = await this.api.get('/admin/pending-pickups');\n        return response.data;\n    }\n    async getMonitoringSchedule() {\n        const response = await this.api.get('/admin/monitoring-schedule');\n        return response.data;\n    }\n    // File upload\n    async uploadFile(file, path) {\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('path', path);\n        const response = await this.api.post('/uploads', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        });\n        return response.data;\n    }\n    // Health check method for debugging\n    async healthCheck() {\n        try {\n            const response = await this.api.get('/');\n            return {\n                success: true,\n                data: response.data\n            };\n        } catch (error) {\n            console.error('Health check failed:', error);\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : 'Unknown error'\n            };\n        }\n    }\n    constructor(){\n        this.api = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n            baseURL: process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3000'\n        });\n        this.setupInterceptors();\n    }\n}\nconst apiClient = new ApiClient();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api.ts\n"));

/***/ })

});